services:
  php:
    build: .
    container_name: ecoride_web
    ports:
      - "8080:80"
    environment:
      # --- MySQL ---
      DB_HOST: db
      DB_NAME: ecoride
      DB_USER: ecoride_user
      DB_PASS: ecoride_password

      # --- MongoDB (URI + DB) ---
      MONGO_URI: mongodb://root:secret@mongo:27017/?authSource=admin
      MONGO_DB: ecoride

      # --- Divers ---
      TIMEZONE: Europe/Paris
      DEBUG: "1"

      # --- SMTP (PHPMailer) ---
      # Prod/SMTP r√©el
      MAIL_HOST: smtp.gmail.com
      MAIL_PORT: "587"              # 587 = STARTTLS ; 465 = SMTPS
      MAIL_USERNAME: ecoride.demo@gmail.com
      MAIL_PASSWORD: fjsi deqa cbng kdgo
      MAIL_FROM_ADDRESS: ecoride.demo@gmail.com
      MAIL_FROM_NAME: EcoRide
      MAIL_ENCRYPTION: tls
      MAIL_DEBUG: "0"

    volumes:
      - ./:/var/www/html
      - ./docker/php/php.ini/php.ini:/usr/local/etc/php/conf.d/zz-custom.ini:ro
      - ./apache/default.conf:/etc/apache2/sites-available/000-default.conf:ro
    depends_on:
      db:
        condition: service_healthy
      mongo:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - ecoride_network

  db:
    image: mysql:8.0
    container_name: ecoride_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ecoride
      MYSQL_USER: ecoride_user
      MYSQL_PASSWORD: ecoride_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql-init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -proot || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 30
    restart: unless-stopped
    networks:
      - ecoride_network

  mongo:
    image: mongo:6
    container_name: ecoride_mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD-SHELL", "mongosh -u root -p secret --authenticationDatabase admin --quiet --eval 'db.adminCommand({ ping: 1 }).ok' || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 30
    restart: unless-stopped
    networks:
      - ecoride_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: ecoride_pma
    ports:
      - "8081:80"
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: ecoride_user
      PMA_PASSWORD: ecoride_password
      PMA_ARBITRARY: "0"
      UPLOAD_LIMIT: 128M
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - ecoride_network

  mailhog:
    image: mailhog/mailhog:latest
    container_name: ecoride_mailhog
    ports:
      - "1025:1025"   # SMTP
      - "8025:8025"   # UI
    restart: unless-stopped
    networks:
      - ecoride_network

networks:
  ecoride_network:
    driver: bridge

volumes:
  mysql_data:
  mongo_data:
